<?phpclass InformationController{    /**     * Get all params was store in system     *     * @param bool $paramsId     * @return mixed     */    public function actionGet($paramsId = false)    {        // create new object from model Steering        $stering = new Steering();        if ($paramsId !== false) {            // get params by id            $getAllParams = $stering->getParams($paramsId, true);        } else {            // get all params from db            $getAllParams = $stering->getAllParams(true);        }        return print_r(base64_decode($getAllParams[0]['name']));    }    /**     * Create new params in database.     *     * @return array     */    public function actionCreate()    {        $params = $this->getRequestParams();        if (!empty($params) && $this->validate($params)) {            $sterring = new Steering();            $createParams = $sterring->createNewParams($params);            die(var_dump($createParams));            if ($createParams !== false) {                $message = 'New params created successfully';                $response = $this->getMessage('done', '200', $message);                return $response;            }        }        return $this->getMessage();;    }    /**     * Validate all params for request.     *     * @param array $data     * @return bool     */    public function validate(array $data)    {        foreach ($data as $param) {            if (empty(trim($param))) {                return false;            }            if (!is_string($param)) {                return false;            }        }        return true;    }    /**     * Get all params from request array.     *     * @return array     */    public function getRequestParams()    {        $data = [];        if (isset($_POST['name'], $_POST['type'], $_POST['value'], $_POST['priority'])) {            $data = [                'name' => $_POST['name'],                'type' => $_POST['type'],                'value' => $_POST['value'],                'priority' => $_POST['priority'],            ];        }        return $data;    }    /**     * Change params in db;     *     * @return array     */    public function actionChange()    {        $changeParams = $this->getChangeParams();        if (!empty($changeParams) && $this->validate($changeParams)) {            $sterring = new Steering();            $changeParams = $sterring->сhangeParams($changeParams);            if ($changeParams !== false) {                $message = 'Params changed successfully';                $response = $this->getMessage('done', '200', $message);                return $response;            }        }        return $this->getMessage();    }    /**     * Get change params from request.     *     * @return array     */    public function getChangeParams()    {        $changeParams = [];        if (isset($_POST['name'], $_POST['value'])) {            $changeParams = [                'name' => $_POST['name'],                'value' => $_POST['value'],            ];        }        return $changeParams;    }    /**     * Delete params from data base.     *     * @param string $paramsName     * @return array|string     */    public function actionDelete($paramsName)    {        if (!empty($paramsName) && $this->validate([$paramsName])) {            $steering = new Steering();            $deleteParams = $steering->deleteParams($paramsName);            if ($deleteParams) {                return $this->getMessage('done', '200', $deleteParams);            }        }        return $this->getMessage();    }    /**     * Generate array message for response.     *     * @param string $status     * @param string $code     * @param string $message     * @return array|string     */    public function getMessage($status = 'failed', $code = '500', $message = 'Fatal error')    {        $response = [            'status' => $status,            'code' => $code,            'message' => $message,        ];        return $response;    }}